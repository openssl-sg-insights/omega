# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
    branches:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    env:
      TZ: Asia/Shanghai
      JQ_ACCOUNT: "${{secrets.JQ_ACCOUNT}}"
      JQ_PASSWORD: ${{secrets.JQ_PASSWORD}}
      __cfg4py_server_role__: DEV
      IS_GITHUB: 1
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: [3.8]
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      postgres:
        image: postgres
        env: # this is defined by image postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: zillionare
          POSTGRES_DB: zillionare
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      minio:
        image: lazybit/minio
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        volumes:
          - /tmp/data:/data
        options: >-
            --name=minio
            --health-cmd "curl http://localhost:9000/minio/health/live"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions poetry

      - name: init POSTGRES db
        run: |
            export TZ=Asia/Shanghai
            sudo -E apt-get update
            sudo -E apt-get install --yes --no-install-recommends postgresql-client
            PGPASSWORD=123456 psql -U zillionare -h localhost --dbname=zillionare --file=omega/config/sql/init.sql
            PGPASSWORD=123456 psql -U zillionare -h localhost --dbname=zillionare --file=omega/config/sql/v1.0.sql

      - name: init influxdb
        run: |
          docker run -d -p 8086:8086 --name my_influxdb influxdb
          sleep 3
          docker exec -i my_influxdb bash -c 'influx setup --username my-user --password my-password --org my-org --bucket my-bucket --retention 168d --token my-token --force'

      - name: test with tox
        run:
          tox

      - name: list files
        run: ls -l .

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          files: coverage.xml

      - name: Build wheels and source tarball
        run: |
          poetry version $(poetry version --short)-dev.$GITHUB_RUN_NUMBER
          poetry version --short
          poetry build

      - name: publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
